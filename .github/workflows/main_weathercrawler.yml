# Deploys a Python Azure Function App (classic Consumption) on push to main
name: Build and deploy Python project to Azure Function App - WeatherCrawler

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'backend'
  PYTHON_VERSION: '3.12'  # Match Function App stack version

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Optional: local validation (does not affect deploy)
      - name: Install deps for local checks
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/requirements.txt
          echo "Validating critical packages:"
          python -c "import azure.identity; print('✓ azure.identity imported successfully')"
          python -c "import azure.keyvault.secrets; print('✓ azure.keyvault.secrets imported successfully')"
          python -c "import azure.storage.blob; print('✓ azure.storage.blob imported successfully')"

      # Upload the FOLDER (no zip) so Oryx does a remote build on Azure
      - name: Upload artifact (backend folder)
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact into ./backend
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: ./backend   # <-- ensures ./backend exists for the deploy step

      - name: Pre-install critical Azure packages
        run: |
          echo "Ensuring critical Azure packages are available..."
          cd ./backend
          pip install --upgrade pip
          pip install azure-identity==1.24.0 azure-keyvault-secrets==4.10.0 azure-storage-blob==12.26.0
          echo "Pre-installation complete"

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A3490156602A436C9BFC3C90FEA2A86C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2439C3A29D1445558E2751C770A84E69 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_61D46500869946E4B2B3BC07386E36B0 }}

      - name: Deploy to Azure Functions (remote build with Oryx)
        uses: Azure/functions-action@v1
        with:
          app-name: 'WeatherCrawler'
          slot-name: 'Production'
          package: ./backend              # <-- folder exists now
          scm-do-build-during-deployment: true
          enable-oryx-build: true
          remote-build: true
