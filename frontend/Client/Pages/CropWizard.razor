
@page "/cropwizard"
@using System.Text.Json
@inject HttpClient HttpClient

<PageTitle>Crop Recommendation Wizard</PageTitle>

<h1>ðŸŒ± Crop Recommendation Wizard</h1>
<hr />
<p>
    This step-by-step tool helps you select the best crops for your location, climate, and soil type. Suitability scores are calculated dynamically based on your inputs.
</p>

@if (step == 1)
{
    <h3>Step 1: Select Your City</h3>
    <select @bind="selectedCityCode" class="form-select" style="max-width:350px;">
        <option value="">-- Select City --</option>
        @foreach (var city in cities)
        {
            <option value="@city.CityCode">@city.CityName</option>
        }
    </select>
    <br />
    <button class="btn btn-primary mt-2" @onclick="NextStep" disabled="@(string.IsNullOrEmpty(selectedCityCode))">Next</button>
}
else if (step == 2)
{
    <h3>Step 2: Confirm Climate & Soil Type</h3>
    @if (selectedCity != null)
    {
        <div class="mb-2"><strong>City:</strong> @selectedCity.CityName</div>
        <div class="mb-2"><strong>Climate Zone:</strong> @selectedCity.ClimateZone</div>
        <div class="mb-2"><strong>Soil Type:</strong> @selectedCity.SoilType</div>
    }
    <button class="btn btn-primary mt-2" @onclick="NextStep">Next</button>
    <button class="btn btn-secondary mt-2 ms-2" @onclick="PrevStep">Back</button>
}
else if (step == 3)
{
    <h3>Step 3: View Recommended Crops</h3>
    @if (isLoading)
    {
        <div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>
    }
    else if (recommendedCrops.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Crop</th>
                    <th>Suitability Score</th>
                    <th>Notes</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var crop in recommendedCrops)
                {
                    <tr>
                        <td>@crop.CropNameSpanish</td>
                        <td><span style="color:@GetScoreColor(crop.CurrentSuitabilityScore)">@crop.CurrentSuitabilityScore</span></td>
                        <td>@crop.Notes</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">No recommended crops found for this location.</div>
    }
    <button class="btn btn-secondary mt-2" @onclick="PrevStep">Back</button>
}

@code {
    private int step = 1;
    private List<CityInfo> cities = new();
    private string selectedCityCode = "";
    private CityInfo? selectedCity;
    private List<CropInfo> recommendedCrops = new();
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadCities();
    }

    private async Task LoadCities()
    {
        var response = await HttpClient.GetAsync("/data-api/rest/GetCities");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            var result = JsonSerializer.Deserialize<CitiesResponse>(json);
            cities = result?.Value ?? new();
        }
    }

    private async Task NextStep()
    {
        if (step == 1 && !string.IsNullOrEmpty(selectedCityCode))
        {
            selectedCity = cities.FirstOrDefault(c => c.CityCode == selectedCityCode);
            step++;
        }
        else if (step == 2)
        {
            await LoadRecommendedCrops();
            step++;
        }
    }

    private void PrevStep()
    {
        if (step > 1) step--;
    }

    private async Task LoadRecommendedCrops()
    {
        isLoading = true;
        recommendedCrops.Clear();
        var response = await HttpClient.GetAsync($"/data-api/rest/GetCropsByCity?CityCode={selectedCityCode}");
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            var result = JsonSerializer.Deserialize<CropsResponse>(json);
            recommendedCrops = result?.Value ?? new();
        }
        isLoading = false;
    }

    private string GetScoreColor(int score)
    {
        return score switch
        {
            >= 85 => "#198754",  // Green
            >= 70 => "#0d6efd",  // Blue
            >= 50 => "#EF6C00",  // Orange
            >= 30 => "#dc3545",  // Red
            _ => "#212529"        // Dark
        };
    }

    public class CitiesResponse
    {
        public List<CityInfo> Value { get; set; } = new();
    }
    public class CropsResponse
    {
        public List<CropInfo> Value { get; set; } = new();
    }
    public class CityInfo
    {
        public string CityCode { get; set; } = "";
        public string CityName { get; set; } = "";
        public int ElevationMeters { get; set; }
        public string SoilType { get; set; } = "";
        public string ClimateZone { get; set; } = "";
    }
    public class CropInfo
    {
        public string CropCode { get; set; } = "";
        public string CropNameSpanish { get; set; } = "";
        public int CurrentSuitabilityScore { get; set; }
        public string Notes { get; set; } = "";
    }
}
